% LOAD DATA
load('GRU_inData_1.mat')

% DEFINE PARAMETERS
maxEpochs = 500; % Maximum number of training epochs.
miniBatchSize = 32; % Mini batch size.
alpha0 = 0.0005;
tau = 10;
gamma = 0.9;
VBfreq = floor(size(X_train,1)/miniBatchSize); % Verbose frequency

% CREATE NEURAL NETWORK
layers = [ ...
    sequenceInputLayer(13,'Normalization','zscore')
    gruLayer(500,'OutputMode','sequence')
    gruLayer(500,'OutputMode','sequence')
    gruLayer(500,'OutputMode','sequence')
    dropoutLayer(0.5)
    fullyConnectedLayer(6)
    regressionLayer];

options = trainingOptions('adam', ...
    'ExecutionEnvironment','gpu', ...
    'MaxEpochs',maxEpochs, ...
    'Shuffle','every-epoch', ...
    'ResetInputNormalization', false,...
    'MiniBatchSize',miniBatchSize, ...
    'GradientThreshold',1, ...
    'InitialLearnRate',alpha0, ...
    'LearnRateSchedule','piecewise', ...
    'LearnRateDropPeriod',tau, ...
    'LearnRateDropFactor',gamma, ...
    'Verbose',true, ...
    'VerboseFrequency',VBfreq, ...
    'Plots','training-progress', ...
    'ValidationFrequency',VBfreq, ...
'ValidationData',{X_valid,Y_valid});

% TRAIN NETWORK!
net = trainNetwork(X_train,Y_train,layers,options);

% SAVE NETWORK
save('gru500Net.mat','net')
